const path = require('path');
const webpack = require('webpack');
const { CleanWebpackPlugin } = require('clean-webpack-plugin');
const dotenv = require('dotenv').config({ path: path.join(__dirname, '.env') });

module.exports = {
    mode: 'development',
    target: 'node',
    entry: {
        index: './src/index.js', // Your application's entry point
        test: './test/test.js', // Entry for your test suite
    },

    output: {
        filename: '[name].bundle.js',
        path: path.resolve(__dirname, 'dist'),
        // Output as CommonJS module, expected by Jest
        libraryTarget: 'commonjs2',
    },
    resolve: {
        extensions: ['.js', '.mjs', '.json'], // Include '.mjs' as an allowed file extension
    },
    module: {
        rules: [
            {
                test: /\.(js|jsx)$/, // Match .js and .jsx files
                loader: 'babel-loader', // Use Babel for JavaScript transpilation
                exclude: /node_modules/,
            },
        ],
    },
    plugins: [
        new CleanWebpackPlugin(),
        new webpack.DefinePlugin({
            'process.env.NODE_ENV': JSON.stringify(dotenv.parsed.NODE_ENV),
        }),
    ],
    devtool: 'source-map',
    // watch: true,
};
